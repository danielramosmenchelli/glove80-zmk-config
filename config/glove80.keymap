/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2
#define FACTORY_TEST 3

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 0>, <&to 0>;
        };

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
&none           &none             &none         &none         &none                                                                                                                      &none   &none   &none      &none                      &none
&none           &none             &none         &none         &none         &none                                                                                          &none         &none   &none   &none      &none                      &none
&kp GRAVE       &kp NUMBER_1      &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                                                                                         &kp NUMBER_6  &kp N7  &kp N8  &kp N9     &kp N0                     &kp MINUS
&kp ESC         &kp Q             &kp W         &kp E         &kp R         &kp T                                                                                          &kp Y         &kp U   &kp I   &kp O      &kp P                      &kp NON_US_BACKSLASH
&kp LEFT_SHIFT  &mt LEFT_SHIFT A  &kp S         &kp D         &kp F         &kp G   &kp B                   &none             &none    &trans   &none      &none           &kp H         &kp J   &kp K   &kp L      &mt RIGHT_SHIFT SEMICOLON  &kp SQT
&magic 1 0      &kp Z             &kp X         &kp C         &kp V                 &mt CAPSLOCK BACKSPACE  &kp LEFT_COMMAND  &kp TAB  &kp TAB  &kp ENTER  &mt CAPS SPACE                &kp N   &kp M   &kp COMMA  &kp PERIOD                 &kp SLASH
            >;
        };

        magic_layer {
            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                     &none  &none  &none  &none  &bt BT_CLR_ALL
&none        &none            &none            &none            &none            &none                                                             &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                   &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                   &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none         &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&none        &none            &none            &none            &none                             &bt_0  &bt_1  &out OUT_USB  &none  &none  &none         &none  &none  &none  &none  &to 0
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                              &trans              &trans          &trans               &trans               &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans              &trans              &trans          &trans               &trans               &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans              &kp LG(LEFT_ARROW)  &kp UP_ARROW    &kp LG(RIGHT_ARROW)  &trans               &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &kp LA(LEFT_ARROW)  &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp LA(RIGHT_ARROW)  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans              &trans              &trans          &trans               &trans               &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans                      &trans              &trans          &trans               &trans               &trans
            >;
        };

        select {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                                  &trans              &trans              &trans               &trans                   &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans                  &trans              &trans              &trans               &trans                   &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans                  &kp LG(A)           &kp LS(UP_ARROW)    &trans               &trans                   &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &kp LS(LG(LEFT_ARROW))  &kp LS(LEFT_ARROW)  &kp LS(DOWN_ARROW)  &kp LS(RIGHT_ARROW)  &kp LS(LG(RIGHT_ARROW))  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans              &trans              &trans               &trans                   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans                          &trans              &trans              &trans               &trans                   &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                                     &trans                          &trans                          &trans                           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                                     &trans  &trans                          &trans                          &trans                           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                                     &trans  &trans                          &kp LS(LA(LC(LG(UP_ARROW))))    &kp LS(LA(LC(LG(O))))            &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                                     &trans  &kp LS(LA(LC(LG(LEFT_ARROW))))  &kp LS(LA(LC(LG(DOWN_ARROW))))  &kp LS(LA(LC(LG(RIGHT_ARROW))))  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                     &trans  &kp LS(LA(LC(LG(PAGE_UP))))     &kp LS(LA(LC(LG(PAGE_DOWN))))   &trans                           &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &kp LS(LA(LC(LG(SPACE))))          &trans                          &trans                          &trans                           &trans  &trans
            >;
        };

        open {
            bindings = <
&trans  &trans                 &trans                 &trans                 &trans                                                                                                               &trans                 &trans                 &trans  &trans                 &trans
&trans  &trans                 &trans                 &trans                 &trans                 &trans                                                                 &trans                 &trans                 &trans                 &trans  &trans                 &trans
&trans  &trans                 &kp LS(LA(LC(LG(W))))  &trans                 &trans                 &kp LS(LA(LC(LG(T))))                                                  &trans                 &trans                 &kp LS(LA(LC(LG(I))))  &trans  &kp LS(LA(LC(LG(J))))  &trans
&trans  &trans                 &kp LS(LC(LA(LG(S))))  &trans                 &kp LG(SPACE)          &kp LS(LA(LC(LG(G))))                                                  &trans                 &trans                 &kp LS(LA(LC(LG(K))))  &trans  &trans                 &trans
&trans  &kp LS(LA(LC(LG(Z))))  &trans                 &kp LS(LA(LC(LG(A))))  &kp LS(LA(LC(LG(V))))  &trans                 &trans  &trans  &trans  &trans  &trans  &trans  &kp LS(LA(LC(LG(N))))  &kp LS(LA(LC(LG(M))))  &trans                 &trans  &trans                 &trans
&trans  &trans                 &trans                 &trans                 &trans                                        &trans  &trans  &trans  &trans  &trans  &trans                         &trans                 &trans                 &trans  &trans                 &trans
            >;
        };

        windows {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                     &trans                  &trans                   &trans                   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans     &trans                  &trans                   &trans                   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans     &trans                  &kp LS(LC(RIGHT_ARROW))  &kp LC(N)                &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans     &kp LC(LS(LEFT_ARROW))  &kp LS(LC(DOWN_ARROW))   &kp LS(LC(RIGHT_ARROW))  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LG(N)  &kp LG(LS(UP_ARROW))    &trans                   &trans                   &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans             &trans                  &trans                   &trans                   &trans  &trans
            >;
        };

        tabs {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                         &trans                &trans                 &trans                   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans         &trans                &trans                 &trans                   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans         &trans                &kp LG(NUMBER_2)       &trans                   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &kp LA(LS(E))  &kp LA(LG(LEFT))      &kp LG(NUMBER_1)       &kp LG(LA(RIGHT_ARROW))  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LG(T)      &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &trans                   &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans                 &trans                &trans                 &trans                   &trans  &trans
            >;
        };

        projects {
            bindings = <
&trans  &trans  &trans  &trans                        &trans                                                                                        &trans  &trans  &trans                        &trans  &trans
&trans  &trans  &trans  &trans                        &trans  &trans                                                  &trans                        &trans  &trans  &trans                        &trans  &trans
&trans  &trans  &trans  &trans                        &trans  &trans                                                  &trans                        &trans  &trans  &kp LS(LA(LC(LG(NUMBER_2))))  &trans  &trans
&trans  &trans  &trans  &trans                        &trans  &trans                                                  &trans                        &trans  &trans  &kp LS(LA(LC(LG(NUMBER_1))))  &trans  &trans
&trans  &trans  &trans  &kp LS(LC(LA(LG(NUMBER_4))))  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LS(LC(LA(LG(NUMBER_3))))  &trans  &trans  &trans                        &trans  &trans
&trans  &trans  &trans  &trans                        &trans          &trans  &trans  &trans  &trans  &trans  &trans                                &trans  &trans  &trans                        &trans  &trans
            >;
        };
    };
};
